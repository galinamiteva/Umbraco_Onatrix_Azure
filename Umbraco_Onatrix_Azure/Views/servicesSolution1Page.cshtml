@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@inject Umbraco.Cms.Web.Common.UmbracoHelper UmbracoHelper

@{
	Layout = "mainLayout.cshtml";
    ViewBag.Title = Model?.Value("pageTitle") ?? null;

    var rootContents = UmbracoHelper.ContentAtRoot();
    var settings = rootContents?.FirstOrDefault(x => x.ContentType.Alias == "settingsPage") ?? null;

    var servicesBannerBackground = settings?.Value<IPublishedContent>("servicesBannerBackground")?.Url() ?? null;
    var servicesBannerLinkText1 = settings?.Value<string>("servicesBannerLinkText1") ?? null;
    var servicesBannerLink1 = settings?.Value<string>("servicesBannerLink1") ?? null;

    var mainContentImg1 = Model?.Value<IPublishedContent>("mainContentImg1")?.Url() ?? null;
    var mainContentImg2 = Model?.Value<IPublishedContent>("mainContentImg2")?.Url() ?? null;

    bool.TryParse(ViewData["error_name"]?.ToString()!, out bool error_name);
    bool.TryParse(ViewData["error_email"]?.ToString()!, out bool error_email);
    bool.TryParse(ViewData["error_message"]?.ToString()!, out bool error_message);
}

                    @*breadcrumb navigation*@
<section id="contact" class="banner bg-gray">
    <div class="background"> 
        <img src="@servicesBannerBackground" alt="Backround image">
        <div class="content">
            <h2>@Model?.Value("servicesBannerHeadline")</h2>
            <div class="links">
                <a class="home" href="@servicesBannerLink1">@servicesBannerLinkText1</a>
                    <div class="chevron"><i class="fa-solid fa-chevron-right"></i></div>
                <a class="home" href="@Model?.Value("servicesBannerLink2")">@Model?.Value("servicesBannerLinkText2")</a>
                <div class="chevron"><i class="fa-solid fa-chevron-right"></i></div>
                <a class="activ" href="@Model?.Value("servicesBannerLink3")">@Model?.Value("servicesBannerLinkText3")</a>
            </div>
        </div>
    </div>
</section>

<section id="solution-item">
    <div class="container">
        <div class="content">

            <nav class="about-us">
                @await Html.PartialAsync("partials/static/solution-about.cshtml")
                @await Html.PartialAsync("partials/static/we_help.cshtml")

               
            </nav>

            <div class="main-content">

                <div class="image">
                    <img src="@mainContentImg1" alt="Image of @Model?.Value("servicesBannerHeadline")">
                </div>

                @Model!.Value("mainContentText1")

                <div class="image">
                    <img src="@mainContentImg2" alt="Image of @Model?.Value("servicesBannerHeadline")">
                </div>
                @Model!.Value("mainContentText2")

            </div>  
        </div>  

    </div>
</section>

<section id="question">
    
        <div class="question-box bg-light container">
            <div class="question-text">
                <h4>Have a question?</h4>
            </div>


            <div class="question-form">

                @using (Html.BeginUmbracoForm("HandleSubmit", "QuestionSurface", FormMethod.Post, new { id = "question-form" }))
                {
                    <div class="form-input-group">
                        <input id="name" name="name" type="text" placeholder="Name" class="form-input" value="@ViewData["name"]">
                        <span class="form-input-error@((error_name) ? "form-invalid-input": null)">Please enter your name</span>
                    </div>

                    <div class="form-input-group">
                        <input id="email" name="email" type="email" placeholder="Email" class="form-input" value="@ViewData["email"]">
                        <span class="form-input-error@((error_email) ? "form-invalid-input" : null)">Please enter a valid e-mail address</span>
                    </div>
                    <div class="form-input-group">
                        <textarea id="message" name="message" type="area" placeholder="Question" class="form-input" value="@ViewData["message"]"></textarea>
                        <span class="form-input-error@((error_message) ? "form-invalid-input" : null)">Please write a question</span>
                    </div>
                    <button type="submit" class="form-button btn-submit btn btn-secondary">Submit</button>

                }

                @if (TempData["success"] != null)
                {
                    <div class="success-message">@TempData["Success"]</div>
                }

            </div>
        </div>
    
</section>


@await Html.PartialAsync("partials/static/next-project.cshtml")